name: Autorelease

concurrency: 
  group: environment-release-${{ github.head_ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - "master"
  workflow_dispatch:

jobs:
  release-windows:
    runs-on: windows-latest

    steps:
    - name: setup WSL
      run: |
        curl -L https://github.com/WhitewaterFoundry/Fedora-Remix-for-WSL/releases/download/39.0.1/Fedora-Remix-for-WSL-SL_39.0.1.0_x64_arm64.msixbundle -o fedora.msixbundle
        unzip fedora.msixbundle Fedora-Remix-for-WSL-SL_39.0.1.0_x64.msix
        unzip Fedora-Remix-for-WSL-SL_39.0.1.0_x64.msix install.tar.gz
        wsl --update
        wsl --import fedora fedora install.tar.gz
        wsl --set-default fedora
        wsl sh -c 'dnf -y install https://github.com/rpmsphere/noarch/raw/master/r/rpmsphere-release-38-1.noarch.rpm'
        wsl sh -c 'dnf -y install --setop=install_weak_deps=False gcc gcc-c++ mingw32-gcc mingw32-gcc-c++ mingw32-zlib-static mingw32-nsis python3-pillow'

    - name: fix line endings
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf
        
    - uses: actions/checkout@v4
      with:
        path: 'wordgrinder'

    - name: run
      run: |
        wsl sh -c 'make -C wordgrinder BUILDTYPE=windows -j$(nproc) +all debian-distr'

    - name: date
      run: |
        echo "RELEASE_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}

    - name: tag
      uses: EndBug/latest-tag@latest
      with:
        tag-name: dev
        force-branch: false
        git-directory: 'wordgrinder'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: delete-old-assets
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ github.token }}
        tag: dev
        assets: | 
          wordgrinder-*.tar.xz
          WordGrinder-*-setup.exe

    - name: date
      run: |
        echo "RELEASE_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}

    - name: release
      uses: softprops/action-gh-release@v1
      with:
        name: Development build ${{ env.RELEASE_DATE }}
        files: |
          wordgrinder/bin/wordgrinder-*.tar.xz
          wordgrinder/bin/WordGrinder-*-setup.exe
        tag_name: dev
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        path: 'wordgrinder'

    - name: brew
      run: |
        brew install pkg-config glfw3 python3 cmark fmt coreutils make dylibbundler
        brew link --overwrite python3
        brew install pillow

    - name: make
      run: |
        gmake -j$(nproc) BUILDTYPE=osx

    - name: tag
      uses: EndBug/latest-tag@latest
      with:
        tag-name: dev
        force-branch: false
        git-directory: 'wordgrinder'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: delete-old-assets
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ github.token }}
        tag: dev
        assets: | 
          WordGrinder-*-setup.pkg

    - name: date
      run: |
        echo "RELEASE_DATE=$(date --rfc-3339=date)" >> ${GITHUB_ENV}

    - name: release
      uses: softprops/action-gh-release@v1
      with:
        name: Development build ${{ env.RELEASE_DATE }}
        files: |
          wordgrinder/bin/WordGrinder-*-setup.pkg
        tag_name: dev
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

